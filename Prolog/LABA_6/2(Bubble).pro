%Сортировка Пузырьком

DOMAINS
lst = integer* %lst -это список, состоящий из переменных, имеющих тип integer

PREDICATES
nondeterm bubble_sort(lst,lst)
nondeterm b_sort(lst,lst,lst)
nondeterm bubble(integer, lst, lst, integer)

CLAUSES
%bubble_sort(List,Sorted) - Запускает сортировку пузырьком
bubble_sort(List,Sorted):- b_sort(List,[],Sorted). 
b_sort([],Acc,Acc).
/*
Переменная T - это хвост исходного списка, который с каждым проходом будет уменьшаться на единицу до пустого списка
Переменная NT - это отсортированная за проход список,который не включает максимальный элемент за данный проход
Переменная Max - максимальный элемент за проход  
*/
b_sort([H|T],Acc,Sorted):- bubble(H,T,NT,Max),b_sort(NT,[Max|Acc],Sorted).

/*
В результате первого прохода на последнее место "всплывёт" максимальный элемент. 
Теперь снова обходим неотсортированную часть списка (от первого элемента до предпоследнего) 
и меняем по пути неотсортированных соседей. Второй по величине элемент окажется на предпоследнем месте.
 Продолжая в том же духе, будем обходить всё уменьшающуюся неотсортированную часть списка, 
 запихивая найденные максимумы в конец
 */
bubble(X,[],[],X). %Конец рекурсии, находим максимальный элемент X  и присваимаем Max = X
bubble(X,[Y|T],[Y|NT],Max):- X>Y, bubble(X,T,NT,Max). %Для случая, если первый элемент больше второго
bubble(X,[Y|T],[X|NT],Max):- X<=Y, bubble(Y,T,NT,Max). % Для случая, если второй элемент больше первого


GOAL
	bubble_sort([],Res1),
	bubble_sort([100],Res2),
	bubble_sort([100, 55, 27],Res3),
	bubble_sort([34, 35],Res4),
	bubble_sort([55, 54],Res5),
	bubble_sort([3,1,7,2,9,0,11,5,23,6],Res6).
 